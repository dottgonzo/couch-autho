"use strict";
var chai = require("chai");
var couchauth = require("../index");
var expect = chai.expect;
var usercredentials = {};
var rootcredentials = {};
var CouchAuth = new couchauth(rootcredentials);
describe("netw object", function () {
    this.timeout(50000);
    before(function () {
        return netw().then(function (data) {
            return networking = data;
        });
    });
    it("expect return an object", function () {
        expect(networking).to.be.ok;
    });
    it("contains an array of networks", function () {
        expect(networking).to.be.an('array');
    });
    describe("network entry", function () {
        it("network structure contains interface, type and mac", function () {
            for (var i = 0; i < networking.length; i++) {
                expect(networking[i]).to.have.property('interface').to.be.a('string');
                expect(networking[i]).to.have.property('type').to.be.a('string');
                expect(networking[i]).to.have.property('mac').to.be.a('string');
                var options = ['wifi', 'wired'];
                expect(options).to.include(networking[i].type);
            }
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvbWFpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsSUFBWSxJQUFJLFdBQU0sTUFBTSxDQUFDLENBQUE7QUFFN0IsSUFBTyxTQUFTLFdBQVUsVUFBVSxDQUFDLENBQUM7QUFFdEMsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztBQUl6QixJQUFJLGVBQWUsR0FBQyxFQUVuQixDQUFDO0FBRUYsSUFBSSxlQUFlLEdBQUMsRUFFbkIsQ0FBQztBQUVGLElBQUksU0FBUyxHQUFDLElBQUksU0FBUyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBTzdDLFFBQVEsQ0FBQyxhQUFhLEVBQUU7SUFDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUVwQixNQUFNLENBQUM7UUFDSCxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVMsSUFBSTtZQUM1QixNQUFNLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQTtRQUM1QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0lBR0gsRUFBRSxDQUFDLHlCQUF5QixFQUFFO1FBQzFCLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztJQUNoQyxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQywrQkFBK0IsRUFBRTtRQUNoQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDekMsQ0FBQyxDQUFDLENBQUM7SUFJSCxRQUFRLENBQUMsZUFBZSxFQUFFO1FBRXRCLEVBQUUsQ0FBQyxvREFBb0QsRUFBRTtZQUNyRCxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztnQkFDekMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUN0RSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQ2pFLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDaEUsSUFBSSxPQUFPLEdBQUcsQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUM7Z0JBQ2hDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNuRCxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUMsQ0FBQztBQUVQLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvbWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIG1vY2hhIGZyb20gXCJtb2NoYVwiO1xuaW1wb3J0ICogYXMgY2hhaSBmcm9tIFwiY2hhaVwiO1xuXG5pbXBvcnQgY291Y2hhdXRoPSByZXF1aXJlKFwiLi4vaW5kZXhcIik7XG5cbmxldCBleHBlY3QgPSBjaGFpLmV4cGVjdDtcblxuXG5cbmxldCB1c2VyY3JlZGVudGlhbHM9e1xuICAgIFxufTtcblxubGV0IHJvb3RjcmVkZW50aWFscz17XG4gICAgXG59O1xuXG5sZXQgQ291Y2hBdXRoPW5ldyBjb3VjaGF1dGgocm9vdGNyZWRlbnRpYWxzKTtcblxuXG5cblxuXG4vLyB3cml0ZSB0ZXN0cyBhYm91dCBtdWx0aXBsZSB2YWx1ZXMgKDIgaXAgb3IgMiBnYXRld2F5IGZvciB0aGUgc2FtZSBpbnRlcmZhY2UpXG5kZXNjcmliZShcIm5ldHcgb2JqZWN0XCIsIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMudGltZW91dCg1MDAwMCk7XG5cbiAgICBiZWZvcmUoZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBuZXR3KCkudGhlbihmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV0d29ya2luZyA9IGRhdGFcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cblxuICAgIGl0KFwiZXhwZWN0IHJldHVybiBhbiBvYmplY3RcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIGV4cGVjdChuZXR3b3JraW5nKS50by5iZS5vaztcbiAgICB9KTtcblxuICAgIGl0KFwiY29udGFpbnMgYW4gYXJyYXkgb2YgbmV0d29ya3NcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIGV4cGVjdChuZXR3b3JraW5nKS50by5iZS5hbignYXJyYXknKTtcbiAgICB9KTtcblxuXG5cbiAgICBkZXNjcmliZShcIm5ldHdvcmsgZW50cnlcIiwgZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgaXQoXCJuZXR3b3JrIHN0cnVjdHVyZSBjb250YWlucyBpbnRlcmZhY2UsIHR5cGUgYW5kIG1hY1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmV0d29ya2luZy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGV4cGVjdChuZXR3b3JraW5nW2ldKS50by5oYXZlLnByb3BlcnR5KCdpbnRlcmZhY2UnKS50by5iZS5hKCdzdHJpbmcnKTtcbiAgICAgICAgICAgICAgICBleHBlY3QobmV0d29ya2luZ1tpXSkudG8uaGF2ZS5wcm9wZXJ0eSgndHlwZScpLnRvLmJlLmEoJ3N0cmluZycpO1xuICAgICAgICAgICAgICAgIGV4cGVjdChuZXR3b3JraW5nW2ldKS50by5oYXZlLnByb3BlcnR5KCdtYWMnKS50by5iZS5hKCdzdHJpbmcnKTtcbiAgICAgICAgICAgICAgICB2YXIgb3B0aW9ucyA9IFsnd2lmaScsICd3aXJlZCddO1xuICAgICAgICAgICAgICAgIGV4cGVjdChvcHRpb25zKS50by5pbmNsdWRlKG5ldHdvcmtpbmdbaV0udHlwZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG59KTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
